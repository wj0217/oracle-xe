/*
함수(function)
매개변수를 받아 특정 계산(작업)을 수행하고 결과를 반환하는 구조로 되어있습니다.

함수 유형
-단일행 함수 - 단일행 매개변수를 받아 결과 값 반환
-여러행 함수 - 여러행 매개변수를 받아 결과 값 반환
*/

-- 단일행 함수


/*
대소문자 변환 함수
*/
--lower () 함수 소문자로 변환
select employee_id, last_name, department_id
from employees
where last_name = 'higgins';

select employee_id, last_name, department_id
from employees
where lower(last_name) = 'higgins';

--upper() 함수 - 대문자로 변환
select upper ('higgins') from dual;

--initcap() 함수 - 첫글자만 대문자로 변환
select employee_id, last_name, department_id
from employees
where lower(last_name) = 'higgins';


/*
문자 조작 함수
*/
--concat()함수- 두개 파라미터 값을 연결
select concat('HELLO', 'WORLD') from dual;
select concat 'HELLO' || 'WORLD' from dual;

--substr() -지정된 길이의 문자열을 추출합니다.
select substr('HeloWorld', 1, 5) from dual;

-- length() - 문자열 갈이를 숫자 값으로 표시합니다.
select length('HelloWorld') from dual;

-- instr() - 이름이 지정된 문자의 숫자 위치를 찾습니다.
select instr('HelloWorld', 'W') from dual;

--land() - 길이가 n이 되도록 왼쪽부터 문자식으로 채운 표현식을 반환합니다.
select lpad('salary', 10, '*') from dual;

--land() - 길이가 n이 되도록 오른쪽부터 문자식으로 채운 표현식을 반환합니다.
select rpad('salary', 10, '*') from dual;

--replace() - 문자열 치환
select replace('JACK and JUE', 'J', 'BR') from dual;


-- trim() - 문자열에서 선행 문자나 후행 문자를 자릅니다.
select trim('H' from 'HelloWorld') from dual;

/*
숫자 함수
*/
-- round()- 지정된 소수점 자릿수로 값을 반올림 합니다.
select round(45.926, 2) from dual;

--trunc() - 지정된 소수점 ㅅ자리수로 값을 truncate합니다
select trunc(45.926, 2) from dual;

--mod() - 나눈 나머지를 반환 합니다.
select mod(1600, 300) from dual;

/*
날짜 함수
*/
/*
--sysdate() 함수
반환값 - 날짜, 시간
*/
select sysdate from dual;

/*
날짜 연산
-날짜에 숫자를 더하거나 뺴서 결과 날짜 값을 구합니다.
-두 날짜 사이의 일수를 알아내리 위해 뺴기 연산을 합니다.
- 시간 수를 24로 나워 날짜에 시간을 더합니다.
*/
select last_name, (sysdate-hire_date)/7 as weeks
from employees
where department_id = 90;

/*
날짜 조작 함수

months_between() - 두 날짜 간의 월수
add_months() - 날짜에 월 추가
next_day() - 지젇된 날짜의 다음날
last_day() - 월의 마지막 날
round() - 날짜 반올림
trunc() - 날짜 truncate
*/

select months_between('22-12-16', '21-12-16') from dual;
select add_months('22-12-16', 1) from dual;
select next_day ('22-12-16' 4) from dual;
select last_day ('23-02-16') from dual;
select round(sysdate, 'month') from dual;
select trunc(sysdate, 'month') from dual;

/*
변환함수
*/

/*
to_char() 함수 - 날짜 또는 숫자 사용가능
yyyy - 숫자로 된 전체 연도
year - 영어 철자로 표기된 연도
mm -  월의 2자리 값
month - 전체 월 이름
mon - 월의 3자리 약어
dy - 3문자로 된 요일 약어
day - 요일의 전체 이름
dd - 숫자 형식의 월간 일
am 또는 pm - 자오선 표시
a.m. 또는 p.m. - 마침표가 있는 자오선 표시
hh 또는 hh12 또는 hh24 - 하루 시간 또는 반일 시간(1-12) 또는 전일 시간(0-23)
mi - 분(0-59)
ss - 초(0-59)

timestamp 타입
ff - 밀리세컨드
*/
select last_name, to_char(hire_date, 'yyyy-mm-dd hh24:mi:ss') as hiredate
from employees;


select to_char (systimestamp, 'yyyy-mm-dd hh24:mi:ss') from dual;

/*
to_char() 숫자에 사용

9 -숫자로 나타냄
0 -0이 표시되도록 강제 적용
$ -부동 달러 기호 배치
l -부동 로컬 통화 기호 사용
. -소수점 출력
, -천단위표시자로 쉼표 출력
*/
select to_char(salary, 'l99,999.00') salary
from employees
where last_name = 'Ernst';

-- to_date() - 문자를 date 타입으로 변환
select last_name, to_char(hire_date, 'yyyy-mm-dd')
from employees
where hire_date < to_date(2005-01-01, 'yyyy-mm-dd');


/*
함수 중첨
단일 행 함수는 어떠한 레벌로도 중첨될 수 있습니다.
중첩된 함수는 가장 깊은 레벨에서 가장 낮은 레벨로 평가됩니다.
*/

select last_name, upper(concat(substr(last_name, 1, 8), '_us'))
from employees
where department_id = 60;


/*
nvl() 함수
null 값을 실제 값으로 반환 합니다.
*/

select last_name, salary, nvl(commission_pct, 0),
(salary*12) + (salary*12*nvl(commission_pct, 0)) an_sal
from employees; 

select commission_pct 
from employees;

/*
nvl2() 함수 
첫번째 표현식을 검사합니다. 첫번쨰 표현식이 null이 아니면 nv2 함수는 두번쨰 표현식을 반환합니다.
첫번째 표현식이 null이면 세번쨰 표현식이 반환합니다.
*/
select last_name, salary, commission_pct,
nvl2(commission_pct,
'sat+comm', 'sal') income
from employees
where department_id in (50, 80);

/*
nullif() 함수
두 표현식을 비교 같으면 null 반환, 다르면 exprl을 반환 합니다.
그러나 expr1에 대해 리터럴 nul을 지정할 수 없습니다.
*/

select first_name, length(first_name) "exprl",
last_name, length(last_name) "ecpr2",
nullif(length(first_name), length(last_name)) result
from employees;





